<!--RKDEV-10904 - Shrutika-->
<apex:page controller="rkl.JS_Search" extensions="IncidentIntakePageController" action="{!pageLoad}" docType="html-5.0" sidebar="false" showHeader="false" standardStylesheets="false" cache="false">

    <head>
        <rkl:RKPIncludes includeModules="*,depend" portalGroup="{!portalSettings.portalGroup}" language="{!portalSettings.language}" />
        <style type="text/css">
            body {
                background: rgb(240, 240, 240);
            }

            #finishLater {
                margin-top: 20px;
                margin-right: 10px;
            }

            .rk-cnavTop {
                height: 75px;
            }

            .rk-cnavBar {
                top: 75px;
            }

            .rk-cnavMBody {
                top: 75px;
            }

            .rk-cnavSplitter {
                top: 75px;
            }
            .modal-dialog { 
           z-index: 1000; 
           } 
           .loading { 
           z-index: 10; 
           }
        </style>
        <script>
        (function($) {
            "use strict";

            $(document).on('programReady', function(event, program) {
                $('.initLoadScreen').fadeOut();
                if (program.$topBar) {
                        //Return button if landing page is present- Optional

                        $('<a class="btn pull-right returnBtn"  />')
                           .html('Return Home')
                        .click(function() {
                         window.location = 'IncidentIntakeLandingPage?portalGroup={!portalSettings.portalGroup}';
                        })
                        .appendTo(program.$topBar);
                        //Logo from the custom setting

                    $('<img height="75" />')
                        .attr("src", namespace('portal.images'). {!portalSettings.PortalLogo })
                        .addClass("image")
                        .appendTo(program.$topBar);
                } //if

            });
            var hideShowParentFunc = function(srcSec, srcFields, showFun, showFields) {
            var hideShowFunc = function() {
                var parentsVisible = true;
                $.each(srcFields, function(i, f) {
                    if (typeof f === 'string') {                
                        if (!srcSec.fields(f).visible()) {               
                            parentsVisible = false;
                            return false; 
                        }
                    } else if (!f.visible) {
                        parentsVisible = false;
                        return false;
                    }
                })
                
                var actionField = srcFields.slice(-1)[0];
                var show;
                if (typeof actionField === 'string') {
                    show = parentsVisible && showFun(srcSec.sobject().get(actionField).value());
                } else {
                    show = parentsVisible && showFun(actionField.sfield.value());
                }
                
                $.each(showFields, function(i, f) {
                    if (typeof f === 'string') {
                        srcSec.fields(f).visible(show);
                    } else {
                        f.visible(show);
                    }
                    
                });
            };
            $.each(srcFields, function(i, f) {
                if (typeof f === 'string') {
                    srcSec.sobject().get(f).on('localChange', hideShowFunc);
                } else {
                    f.sfield.on('localChange', hideShowFunc);
                }
            })
            hideShowFunc();
            }



            var hideShow = function(srcSec, srcFld, showFun, showFields) {
                var hideShowFunc = function() {
                    var show = showFun(srcSec.sobject().get(srcFld).value());
                    $.each(showFields, function(i, f) {
                        if(f){
                            f.visible(show);
                        }
                    });
                };
                srcSec.sobject().get(srcFld).on('localChange', hideShowFunc);
                hideShowFunc();
            }

            var is = function(x) { return function(v) { return v === x; }; };
            var isNot = function(x) { return function(v) { return v !== x; }; };
            var isYes = is('Yes');
            var isNo = is('No');
            var isOneOfMany = function(x) {
                return function(v) { //v = input value  x = desired input to match
                    var returnVal = false;
                    $.each(x, function(key, value) { if (value === v) { returnVal = true; } });
                    return returnVal;
                };
            };

            var sectionStatus = function(sec, showFunc) {
                return function() {
                    if (showFunc()) {
                        if (sec.sobject().get('id').value()) return true;
                        return 'disabled';
                    }
                    return false;
                };
            };

            //Method to add the time fields with the 12 hour format
            $.mask.definitions['P'] = '[AaPp]';
            $.mask.definitions['p'] = '[Mm]';
            var timeFormatAmPm = function(timeField) {
             
                timeField.format('99:99 Pp')
                    .hasValidValue(function() {
                        var val = timeField.$input.val();
                        return timeField.isReqd ? rkl.portal.util.isStandardTime(val) : (val === '' || rkl.portal.util.isStandardTime(val));
                    })
                    ._attachOnChange(function() {
                        console.log(timeField);
                        timeField._clearError();
                        if (timeField.hasValidValue()) {
                            timeField.store();
                        } else {
                            timeField.setErrorLabel('Invalid time format');
                        }
                    });
            }

            //Method to add the time fields with the 24 hour format
            var time24Hours = function(timeField) {
                timeField.format('99:99').hasValidValue(function() {
                        var val = timeField.$input.val();
                        return val === '' || rkl.portal.util.isMilitaryTime(val);
                    })
                    ._attachOnChange(function() {
                        timeField._clearError();
                        if (timeField.hasValidValue()) {
                            timeField.store();
                        } else {
                            timeField.setErrorLabel('Invalid 24-hr time format');
                        }
                    });
            }

            //Configuration settings defining the templates to be used for sections and sub sections
           var config = {
                controller: IncidentIntakePageController,
                masterTemplate: "intakeTemplate",
                htmlSelector: "#incidentPortalRoot",
                recordId: "{!recordId}",
                
                templates: {
                    intakeTemplate: {

                        sections: {

                            Claim_Information: {
                                postInit: function(section) {
                                
                                }
                            },
                            Description_of_Event: {
                                postInit: function(section) {
                                
                                }
                            },
                             Shipment_Information: {
                                postInit: function(section) {
                                section.visible(sectionStatus(section, function() { return((/^SEO/i.test(section.sobject().get('intake_type__c').value())));
                                                }));
                                                
                                                hideShow(section, 'intake_type__c', is('SEO'), [
                                section.fields('currency_claimed_amount__c'),
                                
                                ]);
                                }
                            },
                            Claimant: {
                                postInit: function(section) {
                                
                                }
                            },
                            Responsible_Party: {
                                postInit: function(section) {
                                
                                }
                            },
                            
                            Submit: {
                                postInit: function(section) {
                                    section.visible(sectionStatus(section, function() { return true; }));
                                }
                            }
                        }, // End Sections

                        submit: {

                            validations: [function(program) {
                                var $def = new $.Deferred();
                                rkl.portal.ui.util.portalDialog({
                                    type: 'confirm',
                                    $deferred: $def
                                });

                                program.sections('Submit').sobject().get('im_status__c').value('Completed');
                                return $def.promise();
                            }],

                            prune_safety: [{
                                    sobjectType: 'intake__c',
                                    records: [],                                     
                                    fields: ['im_status__c','reported_by_contact__c'], // if there are any fields that may be hidden that we want to save
                                },
                                
                            ],

                            prune_verify: [function() {
                                var $def = new $.Deferred();
                                $def.resolve();
                                return $def.promise();
                            }],

                            final_save_done: [function(program) {
                                var $def = new $.Deferred();
                                var $thisMessage = $("span[data-rktrans='dialog.Success.Message']")
                                    .append(program.sections('Submit').sobject().get('name').value() + '<br/><br/>');
                                var $thisMessage1 = $("span[data-rktrans='dialog.Success.Message1']")
                                var $thisTitle = $("span[data-rktrans='dialog.Success.Title']");
                                var $success = rkl.portal.ui.util.portalDialog({ type: 'success', $message: [$thisMessage, $thisMessage1], $title: $thisTitle });

                                $success
                                    .done(function() {
                                        $def.resolve();
                                        
                                        window.location = 'IncidentIntakeLandingPage?portalGroup={!portalSettings.portalGroup}';
                                    });

                                return $def.promise();
                            }]
                        }, // End Submit

                        //Setting child section templates
                        postInit: function(program) {
                            var relSecsVisibility = function(section, field) {
                                program.sections(section).visible(sectionStatus(parentSection, function() {
                                    return rkl.portal.util.isYes(parentSection.sobject().get(field).value());
                                }));
                            };
                            
                           
                        }
                    }, 

                } // End Templates
            }; // End Config

            rkl.portal.ui.init(config)
                .done(function(tconfig) {
                    if ('{!employee}' !== '') {
                        tconfig.sobject.get('reported_by_contact__c').value('{!JSENCODE(employee.Id)}');
                    }
                    tconfig.program.init();
                    $(document).trigger("programReady", tconfig.program);
                })
                .fail(function() {
                    alert("Something bad happened during initialization - See console");
                });

        })(jQuery);
        </script>

    </head>

    <body>
        <div id="customMessages" style="display: none;">
            <span data-rktrans="dialog.Success.Title" data-rktranselemtype="ui.label">Success!</span>
            <span data-rktrans="dialog.Success.Message" data-rktranselemtype="ui.label">Thank you for reporting the Incident.<br/><br/>Your Incident # is: </span>
        </div>
        <div class="ui-widget-overlay ui-front initLoadScreen" style="display: true;">
            <div class="crMsg" style="text-align: center;font-weight: bold;">
                Loading...
                <br/>
                <img src="{!$Resource.rkl__ajax_loader_gif}" height="50" width="50" />
                <br/> Please Wait...
            </div>
        </div>
        <div id="incidentPortalRoot"></div>
    </body>
</apex:page>
<!--RKDEV-10904 - Shrutika-->