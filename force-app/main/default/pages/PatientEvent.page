<apex:page controller="rkl.JS_Search" extensions="PatientEvent_Controller" docType="html-5.0" action="{!pageLoad}" sidebar="false" showHeader="false" standardStylesheets="false" cache="false">
    <head>

        <rkl:RKPIncludes includeModules="*,depend"
            language="en"
            additionalImages="ajax_loader_gif"
            additionalJS="PortalDynamicLogic"
        />

        <style type="text/css">
            body {
                background: rgb(240, 240, 240);
            }
            #finishLater {
                margin-top: 20px;
                margin-right: 10px;
            }
            .rk-cnavTop {
                height: 75px;
                background-color:#8C8686;
            }
            .rk-cnavBar {
                top: 75px;
            }
            .rk-cnavMBody {
                top: 75px;
            }
            .rk-cnavSplitter {
                top: 75px;
            }

            .modal-dialog {
                z-index: 1000;
            }
            .loading {
                z-index: 10;
            }

        </style>

        <script>

            (function($) {
                "use strict";

                $(document).on('programReady', function(event, program) {
                  $('.initLoadScreen').fadeOut();

                  if(program.$topBar) {
                      $('<a id="finishLater" class="btn pull-right" style="color:white;" href="{!$Page.SelectEvent}">Return Home</a>')
                          .appendTo(program.$topBar);

                      $('#finishLater').click(function(e){
                          e.preventDefault();
                          var href = $(this).attr("href");

                          var $thisMessage = $("span[data-rktrans='dialog.Warning.Message']").clone();

                          var $confirm = rkl.portal.ui.util.portalDialog({type: 'confirm', $message: $thisMessage});

                          $confirm
                          .done(function() {
                              window.location = href;

                          });

                      });

                      $('<img height="75" />')
                            .attr("src","{!$Resource.rkLogo3}")
                            .addClass("image")
                      .appendTo(program.$topBar);
                  }

                }); // End programReady


                var GeneralInfoSection = {
                    postInit: function(section) {
                        hideShow(section, ['provider_notified__c'], is('Yes'), ['name_of_provider__c']);
                        hideShow(section, ['Anonymous_Reporter__c'], is('No'), ['Reporter__c','Reporter_First_Name__c','Reporter_Last_Name__c','Reporter_phone__c','Reporter_Email__c','Reporter_Job__c']);
                        hideShow(section, ['Type__c'], is('Incident'), ['Patient_Visit__c','Patient_First_Name__c','Patient_Last_Name__c','Patient_Date_of_Birth__c','Patient_Med_Rec_Num__c']);

                        maxDate(section.fields('date_of_event__c'), new Date());
                        maxDate(section.fields('patient_date_of_birth__c'), new Date());
                        timeFormat24(section.fields('time_of_event__c'));

                    }
                };



                var submitBlock = {
                    validations: [function(program) {
                        var $def = new $.Deferred();

                        rkl.portal.ui.util.portalDialog({type: 'confirm', $deferred: $def});

                        program.sections('Submit').sobject().get('im_status__c').value('Submitted');

                        return $def.promise();
                    }],
                    prune_safety: [
                        {

                            sobjectType: 'patient_event__c',
                            records: [], // if there are any records that may be hidden that we want to save
                            fields: ['recordtypeid', 'im_status__c'],  // if there are any fields that may be hidden that we want to save

                        }
                    ],
                    prune_verify: [function() {
                        var $def = new $.Deferred();

                        console.log('Pruned', arguments);
                        $def.resolve();
                        return $def.promise();
                    }],
                    final_save_done: [function(program) {
                        var $def = new $.Deferred();

                        var $thisMessage = $("span[data-rktrans='dialog.Success.Message']")
                                            .append(program.sections('Submit').sobject().get('name').value())
                                            .append($("span[data-rktrans='dialog.Success.Signature']"));
                        var $thisTitle = $("span[data-rktrans='dialog.Success.Title']").clone();
                        var $success = rkl.portal.ui.util.portalDialog({type: 'success', $message: $thisMessage, $title: $thisTitle});

                        $success
                        .done(function() {
                            $def.resolve();
                             window.location = '{!JSENCODE($Page.SelectEvent)}';

                        });

                        return $def.promise();
                    }]
                };


                /*
                 *  Configuration JSObject for the entire portal
                 */
                var config = {
                    controller: PatientEvent_Controller,
                    templateRetrieveFuncName: "retrieveTemplate",  //default is retrieveTemplate
                    //navTemplate: "tocnav",  //default is tocnav
                    masterTemplate: "{!$CurrentPage.parameters.recType}",
                    htmlSelector: "#PortalRoot",
                    recordId: "{!recordId}",
                    templates: {
                        Laboratory: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Laboratory: {
                                    postInit: function(section) {
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Diagnostic Template
                        Other: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Other Template
                        Perinatal: {
                            sections: {
                                General_Information_Perinatal: {
                                    postInit: function(section) {
                                        hideShow(section, ['provider_notified__c'], is('Yes'), ['name_of_provider__c']);
                                        hideShow(section, ['Anonymous_Reporter__c'], is('No'), ['Reporter__c','Reporter_First_Name__c','Reporter_Last_Name__c','Reporter_phone__c','Reporter_Email__c','Reporter_Job__c']);
                                        hideShow(section, ['Affected_by_event__c'], ifMultiPickIncludes('Mother'), ['Patient_Visit__c','Patient_First_Name__c','Patient_Last_Name__c','Patient_Date_of_Birth__c','Patient_Med_Rec_Num__c']);
                                        hideShow(section, ['Affected_by_event__c'], ifMultiPickIncludes('Neonate(s)'), ['Neonate__c','Neonate_First_Name__c','Neonate_Last_Name__c','Neonate_Med_Rec_Num__c','Neonate_DoB__c']);
                                        maxDate(section.fields('date_of_event__c'), new Date());
                                        maxDate(section.fields('patient_date_of_birth__c'), new Date());
                                        maxDate(section.fields('neonate_dob__c'), new Date());
                                        timeFormat24(section.fields('time_of_event__c'));

                                    }
                                },
                                Perinatal: {
                                    postInit: function(section) {
                                        hideShow(section, ['Which_did_event_involve__c'], is('Birthing Process (labor and delivery)'), ['Was_labor_induced__c','Mode_of_delivery__c']);
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                          section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock,
                            postInit : function(program) {
                                var generalSection = program.sections('General_Information_Perinatal');
                                var perinatalSection = program.sections('Perinatal');
                                hideShow(perinatalSection, [generalSection.fields('affected_by_event__c')], ifMultiPickIncludes('Mother'), ['which_outcome_did_mother_sustain__c']);
                                hideShow(perinatalSection, [generalSection.fields('affected_by_event__c')], ifMultiPickIncludes('Fetus(es)'), ['Which_outcome_did_fetus_sustain__c']);
                                //hideShow(perinatalSection, [generalSection.fields('affected_by_event__c')], ifMultiPickIncludes('Neonate(s)'), ['Which_outcome_did_neonate_sustain__c','Which_birth_trauma__c']);
                                hideShow(perinatalSection, [generalSection.fields('affected_by_event__c'),'which_outcome_did_mother_sustain__c'], ifMultiPickIncludes('Infection'), ['Which_maternal_infections__c']);
                                hideShow(perinatalSection, [generalSection.fields('affected_by_event__c'),'which_outcome_did_mother_sustain__c','which_maternal_infections__c'], ifMultiPickIncludes('Other'), ['Other_Maternal_Infections__c']);
                                hideShow(perinatalSection, [generalSection.fields('affected_by_event__c'),'which_outcome_did_mother_sustain__c'], ifMultiPickIncludes('Injury to body part or organ'), ['Which_body_part__c']);
                                hideShow(perinatalSection, [generalSection.fields('affected_by_event__c'),'which_outcome_did_mother_sustain__c','which_body_part__c'], ifMultiPickIncludes('Other'), ['Other_Mother_body_part_organ_injured__c']);
                                hideShow(perinatalSection, [generalSection.fields('affected_by_event__c'),'which_outcome_did_neonate_sustain__c'], ifMultiPickIncludes('Birth trauma'), ['Which_birth_trauma__c']);
                                hideShow(perinatalSection, [generalSection.fields('affected_by_event__c'),'which_outcome_did_neonate_sustain__c'], ifMultiPickIncludes('Other'), ['Other_neonate_outcome_s__c']);
                               hideShow(perinatalSection, [generalSection.fields('affected_by_event__c'),'Which_birth_trauma__c'], ifMultiPickIncludes('Other'), ['Other_neonate_birth_trauma_injury__c']);

                            }
                        }, // End Perinatal Template
                        Medical_Equipment_Device: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Medical_Equipment_Device: {
                                    postInit: function(section) {
                                        var genericMed={!genericFieldset};
                                        genericMed.push("instruction4");
                                        hideShow(section, ['Device_Involved__c'], is('Implantable device'), ['Was_device_in_the_patient__c']);
                                        hideShow(section, ['Device_Involved__c','Was_device_in_the_patient__c'], isYes, ['Device_Removed__c']);
                                        hideShow(section, ['was_medication_involved__c'], isYes, genericMed);

                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Medical_Equipment_Device Template
                         Anesthesia_Sedation: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Anesthesia_Sedation: {
                                    postInit: function(section) {
                                        hideShow(section, ['which_anesthesia_was_used__c'], isOneOf(['Anesthesia only','Anesthesia and sedation']), ['anesthesia_only__c','Anesthesia_event_category__c']);
                                        hideShow(section, ['which_anesthesia_was_used__c'], isOneOf(['Sedation only','Anesthesia and sedation']), ['Level_of_sedation__c','Type_of_Sedation_Issue__c']);

                                        hideShow(section, ['which_anesthesia_was_used__c','Anesthesia_event_category__c'], is('Other'), ['Other_type_of_anesthesia_event__c']);
                                        hideShow(section, ['which_anesthesia_was_used__c','Anesthesia_event_category__c'], is('Difficulty managing airway'), ['Airway_problem__c']);
                                        hideShow(section, ['which_anesthesia_was_used__c','Anesthesia_event_category__c','Airway_problem__c'], is('Other'), ['Other_type_of_airway_management_problem__c']);
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        },// End Anesthesia_Sedation Template
                        Venous_Thromboembolism: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Venous_Thromboembolism: {
                                    postInit: function(section) {
                                        hideShow(section, ['VTE_Type__c'], ifMultiPickIncludes('Deep Vein Thrombosis (DVT)'), ['Which_test_confirmed_DVT__c','Location_of_DVT__c']);
                                        hideShow(section, ['VTE_Type__c'], ifMultiPickIncludes('Pulmonary Embolism (PE)'), ['Which_test_confirmed_PE__c']);

                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        },// End Venous_Thromboembolism Template
                        Staff_Provider_Behavior: {
                            sections: {
                                Staff_Provider_Behavior:{
                                    postInit: function (section) {
                                        hideShow(section, ['Anonymous_Reporter__c'], is('No'), ['Reporter__c','Reporter_First_Name__c','Reporter_Last_Name__c','Reporter_phone__c','Reporter_Email__c','Reporter_Job__c']);

                                        maxDate(section.fields('date_of_event__c'), new Date());
                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Staff_Provider_Behavior Template
                        Treatment_Procedure: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Treatment_Procedure: {
                                    postInit: function(section) {
                                        hideShow(section, ['Type_of_Treatment_Procedure__c'], is('Consent/Documentation'), ['Consent_Document_Issue__c','Type_of_Consent_Invovled__c']);
                                        hideShow(section, ['Type_of_Treatment_Procedure__c'], is('Nutrition'), ['Nutrition_Issue__c']);
                                        hideShow(section, ['Type_of_Treatment_Procedure__c'], is('Ventilator Care'), ['Vent_Care_Issue__c']);
                                        hideShow(section, ['Type_of_Treatment_Procedure__c'], is('Other'), ['Other_Treatment_Procedure_Issue__c']);
                                        hideShow(section, ['type_of_treatment_procedure__c','vent_care_issue__c'], is('Wrong Settings'), ['Wrong_Setting__c']);
                                        hideShow(section, ['type_of_treatment_procedure__c','vent_care_issue__c'], is('Unplanned extubation'), ['Type_of_Unplanned_Exubation__c']);

                                         section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        },// End Treatment_Procedure Template
                        Surgery: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Surgery: {
                                    postInit: function(section) {
                                        hideShow(section, ['Surgical_event_category__c'], is('Incorrect surgical or invasive procedure'), ['incorrect_surgery_type__c']);
                                        hideShow(section, ['Surgical_event_category__c'], is('Retained object'), ['Object_retained__c','Count_performed__c','xray_obtained_detect_object__c']);
                                        hideShow(section, ['Surgical_event_category__c'], is('Burn and/or operating room fire'), ['burn_fire_type__c']);
                                        hideShow(section, ['Surgical_event_category__c'], is('Other'), ['Other_type_of_surgical_event__c']);
                                        hideShow(section, ['surgical_event_category__c','Count_performed__c'], is('Yes'), ['Reported_count_status__c']);
                                        hideShow(section, ['surgical_event_category__c','object_retained__c'], is('Other'), ['Other_retained_object__c']);

                                       section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        },// End Treatment_Procedure Template
                        Skin_Integrity: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Skin_Integrity: {
                                    postInit: function(section) {
                                        hideShow(section, ['Most_Advanced_Stage__c'], isOneOf(['Stage/Category I','Stage/Category II','Stage/Category III','Stage/Category IV','Unknown']), ['Preventive_Intervention__c','Use_of_Device_Involved__c']);
                                        hideShow(section, ['most_advanced_stage__c','preventive_intervention__c'], is('Yes'), ['Intervention_Used__c']);
                                        hideShow(section, ['most_advanced_stage__c','use_of_device_involved__c'], is('Yes'), ['Type_of_Device__c']);
                                        hideShow(section, ['most_advanced_stage__c','use_of_device_involved__c','type_of_device__c'], is('Tube'), ['type_of_tube__c']);
                                        hideShow(section, ['most_advanced_stage__c','use_of_device_involved__c','type_of_device__c','type_of_tube__c'], is('Other'), ['Other_type_of_tube__c']);
                                        hideShow(section, ['most_advanced_stage__c','use_of_device_involved__c','type_of_device__c','type_of_device__c'], is('Other'), ['Other_type_of_device__c']);

                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        },// End Skin_Integrity Template
                         Security: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Security: {
                                    postInit: function(section) {
                                        hideShow(section, ['Type_of_Security_Issue__c'], is('Personal Property Missing/Damaged'), ['Personal_Property_Missing_Damaged__c']);
                                        hideShow(section, ['Type_of_Security_Issue__c'], is('Patient Protection'), ['Patient_Protection_Issue__c']);
                                        hideShow(section, ['type_of_security_issue__c','patient_protection_issue__c'], is('Burn (non-surgical related)'), ['Type_of_Burn__c']);
                                        hideShow(section, ['Personal_Property_Missing_Damaged__c'], is('Other'), ['Other_Property_Missing_Damaged__c']);
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        },// End Security Template
                        Privacy_Confidentiality: {
                            sections: {
                                General_Information_Privacy_Confidential: {
                                    postInit: function(section) {
                                        hideShow(section, ['Anonymous_Reporter__c'], is('No'), ['Reporter__c','Reporter_First_Name__c','Reporter_Last_Name__c','Reporter_phone__c','Reporter_Email__c','Reporter_Job__c']);
                                        maxDate(section.fields('date_of_event__c'), new Date());
                                        maxDate(section.fields('patient_date_of_birth__c'), new Date());

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Privacy_Confidentiality Template
                        Restraints_Seclusion: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Restraints_Seclusion: {
                                    postInit: function(section) {
                                        hideShow(section, ['Reason_for_Restraints__c'], is('Other'), ['Other_Reason_for_Restraints__c']);
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Restraints_Seclusion Template
                         Patient_Behavior: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Patient_Behavior: {
                                    postInit: function(section) {
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Patient_Behavior Template
                        Narcotic_Discrepancy: {
                            sections: {
                                General_Information_Narcotic_Discrepancy: {
                                    postInit: function(section) {
                                        hideShow(section, ['provider_notified__c'], is('Yes'), ['name_of_provider__c']);
                                        hideShow(section, ['Anonymous_Reporter__c'], is('No'), ['Reporter__c','Reporter_First_Name__c','Reporter_Last_Name__c','Reporter_phone__c','Reporter_Email__c','Reporter_Job__c']);
                                        maxDate(section.fields('date_of_event__c'), new Date());
                                        maxDate(section.fields('patient_date_of_birth__c'), new Date());
                                        timeFormat24(section.fields('time_of_event__c'));
                                    }
                                },
                                Narcotic_Discrepancy: {
                                    postInit: function(section) {
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Narcotic_Discrepancy Template
                        Medication_or_Other_Substance: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Medication: {
                                    postInit: function(section) {
                                        hideShow(section, ['Medication_Involved__c'], is('Medications'), ['medication_type__c']);
                                        hideShow(section, ['Medication_Involved__c'], is('Biological Products'), ['Biological_Products__c']);
                                        hideShow(section, ['Medication_Involved__c'], is('Nutritional Products'), ['Nutritional_Product__c']);
                                        hideShow(section, ['Medication_Involved__c'], is('Other substance'), ['Other_substance__c']);
                                        hideShow(section, ['medication_involved__c','medication_type__c'], is('Compound preparations'), ['Compounded_preparation_ingredients__c']);
                                        hideShow(section, ['medication_involved__c','nutritional_product__c'], is('Other'), ['Other_nutritional_product__c']);

                                        hideShowTwoFields(section, ['medication_involved__c','medication_type__c'], ['medication_involved__c'], is('Prescription or over the counter'),  isOneOf(['Medical Gases','Contrast Media','Biological Products']), 'OR',
                                                          [section.fields('medication__c'), section.fields('brand_name__c'), section.fields('strength__c'), section.fields('dosage_form__c'),section.fields('name_of_manufacturer__c')]);
                                        hideShow(section, ['Incorrect_Action__c'], ifMultiPickIncludes('Incorrect dose'), ['Incorrect_Dosage__c']);
                                        hideShow(section, ['Incorrect_Action__c'], ifMultiPickIncludes('Incorrect timing'), ['Incorrect_Timing__c']);
                                        hideShow(section, ['Incorrect_Action__c'], ifMultiPickIncludes('Incorrect rate'), ['Incorrect_Rate__c']);
                                        hideShow(section, ['Incorrect_Action__c'], ifMultiPickIncludes('Incorrect strength or concentration'), ['Describe_Strength_or_Concentration__c']);
                                        hideShow(section, ['Incorrect_Action__c'], ifMultiPickIncludes('Expired or deteriorated medication'), ['Expiration_Date__c']);
                                        hideShow(section, ['Incorrect_Action__c'], ifMultiPickIncludes('Medication - Allergen to patient'), ['Documented_History_Allergies__c']);
                                        hideShow(section, ['Incorrect_Action__c'], ifMultiPickIncludes('Medication - Contraindicated to patient'), ['contraindication__c']);
                                        hideShow(section, ['Incorrect_Action__c'], ifMultiPickIncludes('Other'), ['Other_Med_Sub_incorrect_action__c']);
                                        hideShow(section, ['incorrect_action__c','contraindication__c'], is('Other'), ['Other_Med_Sub__c']);
                                        hideShow(section, ['Incorrect_Action__c'], ifMultiPickIncludes('Incorrect route of administration'), ['Intended_Route_of_Admin__c','Actual_route_of_administration__c']);
                                        maxDate(section.fields('expiration_date__c'), new Date());

                                         section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Medication_or_Other_Substance Template
                         Information_Systems: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Information_Systems: {
                                    postInit: function(section) {
                                        hideShow(section, ['HIT_Device_Type__c'], is('Other: Please Specify'), ['Other_HIT_device_related_to_event__c']);
                                        hideShow(section, ['HIT_Device_Type__c'], is('Administrative/billing or practice management system'), ['Admin_system_component__c']);
                                        hideShow(section, ['hit_device_type__c','admin_system_component__c'], is('Other'), ['Other_admin_billing_system_component__c']);
                                        hideShow(section, ['HIT_Device_Type__c'], is('Electronic health record (EHR) or component EHR'), ['EHR_Type_Involved__c']);
                                        hideShow(section, ['hit_device_type__c','ehr_type_involved__c'], is('Other'), ['Other_type_of_EHR__c']);

                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Patient_Behavior Template
                         IV_Related: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                IV_Related_Initial_Signs: {
                                    postInit: function(section) {
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End IV_Related Template
                        Diagnostic_Radiology: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Diagnostic_Radiology: {
                                    postInit: function(section) {
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Diagnostic_Radiology Template
                        Healthcare_associated_Infection: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Healthcare_Associated_Infection: {
                                    postInit: function(section) {
                                        hideShow(section, ['Infection_present_at_admission__c'], isYes, ['Infection_Description__c']);
                                        hideShow(section, ['Type_of_HAI__c'], is('Primary bloodstream infection (BSI)'), ['CLABSI__c']);
                                        hideShow(section, ['type_of_hAI__c','clabsi__c'], isYes, ['Central_Line__c']);
                                        hideShow(section, ['type_of_hAI__c'], is('Pneumonia'), ['VAP__c']);
                                        hideShow(section, ['type_of_hai__c','vap__c'], isYes, ['VAP_Classification__c']);
                                        hideShow(section, ['type_of_hai__c'], is('Urinary tract infection'), ['CAUTI__c']);
                                        hideShow(section, ['type_of_hai__c','cauti__c'], isYes, ['Catheter_Status__c','CAUTI_Classification__c']);
                                        hideShow(section, ['type_of_hai__c'], is('Surgical site infection (SSI)'), ['SSI_Classification__c']);
                                        hideShow(section, ['type_of_hai__c'], is('Other type of infection (not involving surgical site) that developed during admission'), ['Other_Type_of_Infection__c']);
                                        hideShow(section, ['type_of_hai__c','Other_Type_of_Infection__c'], is('Other'), ['Other_type_of_infection_not_listed__c']);
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Healthcare_associated_Infection Template
                        Fall: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Fall: {
                                    postInit: function(section) {
                                        hideShow(section, ['Was_fall_observed__c'], isYes, ['Who_observed_fall__c','Witness_Name__c']);
                                        hideShow(section, ['Injury_from_Fall__c'], isYes, ['Fall_Type_of_Injury__c']);
                                        hideShow(section, ['Patient_activity_prior_to_fall__c'], is('Other'), ['Other_activity_prior_to_fall__c']);
                                        hideShow(section, ['fall_risk_assessment_documented__c'], isYes, ['Date_of_Fall_Risk_Assessment__c']);
                                        hideShow(section, ['Patient_at_increased_risk_for_fall__c'], isYes, ['Risk_factors_present_at_fall__c']);
                                        hideShow(section, ['Patient_at_increased_risk_for_fall__c','Risk_factors_present_at_fall__c'], ifMultiPickIncludes('Other'), ['Other_fall_risk_factors_present_at_fall__c']);
                                        hideShow(section, ['Injury_from_Fall__c','Fall_Type_of_Injury__c'], is('Other'), ['Other_fall_injury_sustained__c']);
                                        hideShow(section, ['Measures_in_place_to_prevent_fall__c'], ifMultiPickIncludes('Other'), ['Other_measures_in_place_to_prevent_fall__c']);
                                        maxDate(section.fields('date_of_fall_risk_assessment__c'), new Date());

                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Fall Template
                         Blood_or_Blood_Product: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Blood_or_Blood_Product: {
                                    postInit: function(section) {
                                        hideShow(section, ['Type_of_Blood_Product_Involved__c'], is('Other'), ['Other_blood_product_involved__c']);
                                        hideShow(section, ['Blood_Product_Event_Category__c'], is('Incorrect Action (e.g., patient given blood of wrong ABO type)'), ['Incorrect_action_involved__c']);
                                        hideShow(section, ['Blood_Product_Event_Category__c','Incorrect_action_involved__c'], is('Other'), ['Other_blood_product_incorrect_action__c']);
                                        hideShow(section, ['Blood_Product_Event_Category__c','Incorrect_action_involved__c'], is('Incorrect rate'), ['Rate_of_Administration__c']);
                                        hideShow(section, ['Blood_Product_Event_Category__c','Incorrect_action_involved__c'], is('Incorrect volume (e.g., number of units or milliliters)'), ['Volume__c']);
                                        hideShow(section, ['Stage_event_originated__c'], is('Other'), ['Blood_stage_event_originated_other__c']);
                                        hideShow(section, ['Stage_event_discovered__c'], is('Other'), ['Blood_stage_discover_other__c']);

                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Blood_or_Blood_Product Template
                        Adverse_Drug_Reaction: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                ADR: {
                                    postInit: function(section) {
                                        maxDate(section.fields('date_of_adr_onset__c'), new Date());
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Adverse_Drug_Reaction Template
                        Facilities_Related: {
                            sections: {
                                General_Information: GeneralInfoSection,
                                Facilities_Related: {
                                    postInit: function(section) {
                                        hideShow(section, ['Type_of_Facility_Issue__c'], is('Environmental'), ['Facilities_Environmental_Issue__c']);
                                        hideShow(section, ['Type_of_Facility_Issue__c'], is('Property or Premise'), ['Property_or_Premise_Issue__c']);
                                        hideShow(section, ['Type_of_Facility_Issue__c'], is('Other'), ['Other_Facility_Issue__c']);
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Facilities_Related Template
                        Visitor_Event: {
                            sections: {
                                Visitor:  {
                                    postInit: function(section) {
                                        hideShow(section, ['Anonymous_Reporter__c'], is('No'), ['Reporter__c','Reporter_First_Name__c','Reporter_Last_Name__c','Reporter_phone__c','Reporter_Email__c','Reporter_Job__c']);

                                        maxDate(section.fields('date_of_event__c'), new Date());
                                        timeFormat24(section.fields('time_of_event__c'));

                                    }
                                },
                                Involved_Party: {
                                    postInit: function(section) {
                                        section.visible(sectionStatus(section, function() { return true; }));

                                    }
                                },
                                Submit: {
                                    postInit: function (section) {
                                        section.visible(sectionStatus(section, function() { return true; }));
                                    }

                                }
                            },  // End Sections
                            submit : submitBlock
                        }, // End Facilities_Related Template

                    } // End Templates
                };
                // End Portal Configuration Object

                /*
                 *  Portal Initialization
                 */
                rkl.portal.ui.init(config)
                    .done(function(tconfig) {

                        tconfig.sobject.get('im_status__c').value('In Progress');

                        tconfig.program.init();

                        $(document).trigger("programReady", tconfig.program);
                    })
                    .fail(function() {
                        console.log(arguments);
                        alert("Something bad happened during initialization - See console");
                });


            })(jQuery);

        </script>

    </head>

    <body>
        <div id="customMessages" style="display: none;">
            <span data-rktrans="dialog.Success.Title" data-rktranselemtype="ui.label">Success!</span>
            <span data-rktrans="dialog.Success.Message" data-rktranselemtype="ui.label">Thank you for submitting an event report!
                This allows us to identify and address systems and process issues that will help prevent future recurrence.<br/><br/>
                You will receive a confirmation email with the following information:<br/><br/>Event Number: </span>
            <span data-rktrans="dialog.Success.Signature" data-rktranselemtype="ui.label"><br/><br/>Thanks,<br/><br/>Quality &amp; Patient Safety</span>
            <span data-rktrans="dialog.Warning.Message" data-rktranselemtype="ui.label">If you return to home, all information entered on this form will be lost. Would you like to continue?</span>
        </div>
        <div class="ui-widget-overlay ui-front initLoadScreen" style="display: true;">
            <div class="crMsg" style="text-align: center;font-weight: bold;">
                Loading... <br/>
                 <img src="{!HTMLENCODE($Resource.rkl__ajax_loader_gif)}" height="50" width="50"/> <br/>
                Please Wait...
            </div>
        </div>
        <div id="PortalRoot"></div>
    </body>

</apex:page>