<!---- ****************************************************************
                        Added to RK base RMIS product as 04/05/2016
           ******************************************************************* -->
<apex:page standardController="Scheduled_Payments__c" extensions="ScheduledPaymentsController" sidebar="false" showHeader="true" action="{!onPageLoad}">
    <head>
        <apex:stylesheet value="{!URLFOR($Resource.rkl__aristo,'Aristo.css')}" />
        <apex:stylesheet value="{!$Resource.rkl__aristo_overrides}" />
    
        <apex:stylesheet value="{!URLFOR($Resource.rkl__im_resources_zip, '/css/forms_css.css')}" />
        <apex:stylesheet value="{!$Resource.rkl__ui_manager_css}" />
        <apex:stylesheet value="{!$Resource.rkl__sortable_column_header_css}" />
        <apex:stylesheet value="{!$Resource.rkl__paginator_css}" />
        <apex:stylesheet value="{!$Resource.rkl__selection_model_css}" />
        <apex:stylesheet value="{!$Resource.rkl__inline_dialog_css}" />
        <apex:stylesheet value="{!$Resource.rkl__blocking_pane_css}" />
        
        <apex:includeScript value="{!$Resource.rkl__modernizr}" />
        <apex:includeScript value="{!$Resource.rkl__jquery_1_8}" />
        <!-- <apex:includeScript value="{!$Resource.rkl__jquery_ui}" /> -->
        
        <apex:includeScript value="https://code.jquery.com/ui/1.10.4/jquery-ui.js" />
        
        <apex:includeScript value="{!$Resource.rkl__json2_js}" />
        <apex:includeScript value="{!$Resource.rkl__jQuery_scrollTo}" />
        
        <apex:includeScript value="{!$Resource.rkl__jqueryTools_tooltip_js}" />
        <apex:includeScript value="{!$Resource.rkl__jqueryTools_tooltip_slide_js}" />
        <apex:includeScript value="{!$Resource.rkl__jqueryTools_tooltip_dynamic_js}" /> 
        <apex:includeScript value="{!$Resource.rkl__jQuery_jController_js}" />
        <!-- <apex:includeScript value="{!$Resource.rkl__paginator_js}" />
             <apex:includeScript value="{!$Resource.rkl__selection_model_js}" />
             -->
        <apex:includeScript value="{!$Resource.rkl__dojo_build_js}" />
        <apex:includeScript value="{!$Resource.rkl__string_utils_js}" />
        <apex:includeScript value="{!$Resource.rkl__resource_locator_js}" />
        <apex:includeScript value="{!$Resource.rkl__visualforce_utils_js}" />
        
        <apex:includeScript value="{!$Resource.rkl__smart_layout_container_js}" />
        <apex:includeScript value="{!$Resource.rkl__inline_dialog_js}" />
        <apex:includeScript value="{!$Resource.rkl__ui_manager_js}" />
        <apex:includeScript value="{!$Resource.rkl__cnode}" />
        
        <apex:stylesheet value="{!$Resource.rkl__gridLayout_css}" />
        <!-- <apex:includeScript value="{!$Resource.rkl__gridLayout_js}" /> -->
        <apex:includeScript value="{!$Resource.rkl__gridLayout_js}" />
        
        <apex:includeScript value="{!$Resource.datejs}" />
        
        <apex:stylesheet value="{!$Resource.scheduled_payments_css}" />
        <apex:includeScript value="{!$Resource.scheduled_payments_js}" />
        
        <style type="text/css">
            .tooltip {
                background:transparent url({!URLFOR($Resource.rkl__jqueryTools_media, 'black_big.png')});
            }
            
            body div.rkgl-colset-head {
                background-image: url({!URLFOR($Resource.rkl__noise)});
            }
        </style>
        
        <script type="text/javascript">
            var STATIC_RESOURCE_URL = "{!URLFOR($Resource.rkl__im_resources_zip)}";
            {!uiManagerScript}
        </script>
    </head>
    
    <apex:outputPanel layout="none" rendered="{!solidified}">
        <apex:form id="f">
            
            <apex:actionRegion >
                <apex:outputPanel id="globalFieldIndex" layout="block" style="display:none">
                    
                    <apex:repeat var="f" value="{!globalFieldIndex}">
                        <span>
                            <apex:outputText value="{!IF(f.useCustomLabel,$Label[f.labelName],f.label)}" />
                        </span>
                        <apex:outputPanel layout="none" rendered="{!NOT(f.isIntake)}">
                            <div class="dataWrapper">
                                <apex:outputField value="{!f.binding[f.path]}" />
                            </div>
                        </apex:outputPanel>
                        <apex:outputPanel layout="none" rendered="{!f.isIntake}">
                            <div class="dataWrapper">
                                <div class="fieldInputBlock {!IF(f.required, ' requiredInput', '')}" jFieldLabel="{!IF(f.useCustomLabel,$Label[f.labelName],f.label)}">
                                    <apex:outputPanel layout="none" rendered="{!f.required}"><div class="requiredBlock" /></apex:outputPanel>
                                    <apex:inputField value="{!f.binding[f.path]}" required="false" />
                                </div>
                            </div>
                        </apex:outputPanel>
                    </apex:repeat>
                    
                    <script type="text/javascript">
                        $cnode("#root", {
                            elements: {
                                globalFieldIndexContainer: "{!$Component.globalFieldIndex}", 
                                // note that we avoid detaching this script:
                                globalFieldIndex: $(document.getElementById("{!$Component.globalFieldIndex}")).children("div,span").detach()
                            }
                        });
                    </script>
                    
                </apex:outputPanel>
                
                <span style="display:none">
                    <apex:outputPanel id="save">
                        <apex:actionSupport event="onfocus" action="{!save}" rerender="{!curryRerender}"/>
                    </apex:outputPanel>
                    <apex:outputPanel id="addThirdParty">
                        <apex:actionSupport event="onfocus" action="{!addThirdParty}" rerender="{!curryRerender}"/>
                    </apex:outputPanel>
                    <apex:outputPanel id="finalize">
                        <apex:actionSupport event="onfocus" action="{!finalize}" rerender="{!curryRerender}"/>
                    </apex:outputPanel>
                    
                    <!-- !! note that we box the following action in their own actionRegion because we don't want to validate/merge any field values: -->
                    <apex:actionRegion >
                        <apex:outputPanel id="cancelChanges">
                            <apex:actionSupport event="onfocus" action="{!cancelChanges}" rerender="none" />
                        </apex:outputPanel>
                        <apex:outputPanel id="deleteThirdParty">
                            <apex:actionSupport event="onfocus" action="{!deleteThirdParty}" rerender="{!curryRerender}"/>
                        </apex:outputPanel>
                        <apex:outputPanel id="generateSched">
                            <apex:actionSupport event="onfocus" action="{!generateSched}" rerender="{!curryRerender}"/>
                        </apex:outputPanel>
                        <apex:outputPanel id="refresh">
                            <apex:actionSupport event="onfocus" action="{!refresh}" rerender="{!curryRerender}"/>
                        </apex:outputPanel> 
                    </apex:actionRegion>
                </span>
                
                <script type="text/javascript">
                    $cnode("#root", {
                        actions: {
                            _save: { binding: "{!$Component.save}" },
                            _addThirdParty: { binding: "{!$Component.addThirdParty}" },
                            _finalize: { binding: "{!$Component.finalize}" },
                            _cancelChanges: { binding: "{!$Component.cancelChanges}" },
                            _deleteThirdParty: { binding: "{!$Component.deleteThirdParty}" },
                            _generateSched: { binding: "{!$Component.generateSched}" },
                            _refresh: { binding: "{!$Component.refresh}"},
                            save: rk.scp.getGuardedSaveAction("_save"),
                            addThirdParty: rk.scp.getGuardedSaveAction("_addThirdParty"),
                            finalize: rk.scp.getGuardedSaveAction("_finalize"),
                            cancelChanges: rk.scp.getSimpleRedirectAction("_cancelChanges", "Cancelling..."),
                            deleteThirdParty: rk.scp.getSimpleRedirectAction("_deleteThirdParty", "Deleting..."),
                            generateSched: rk.scp.wrapGenerateSchedAction("_generateSched", "Generating..."),
                           refresh: rk.scp.wrapSimpleRefreshAction("_refresh", "Loading...")
                        }
                    });
                </script>
            </apex:actionRegion>
            
            <apex:outputPanel id="mergeStateScript" style="display:none">
                <script type="text/javascript">
                    rk.scp.inboundMergeState = {!mergeStateJSON};
                </script>
            </apex:outputPanel>
            
            <script type="text/javascript">
                $cnode("#root", {
                    elements: {
                        form: "{!$Component.f}",
                        mergeStateScript: "{!$Component.mergeStateScript}",
                        tabs: "{!$Component.tabs}",
                        tabHeaders: "{!$Component.tabHeaders}",
                        thirdPartyAspects: "{!$Component.thirdPartyAspects}"
                    }
                });
            </script>
            
            <apex:outputPanel layout="block" id="tabs">
                <div id="tabs">
                    <apex:outputPanel id="tabHeaders" layout="block">
                        <ul>
                            <li><a href="#{!primary.data.Id}"><strong>Schedule Details</strong></a></li>
                            <apex:repeat value="{!thirdParties}" var="thirdParty">
                                <li><a href="#{!thirdParty.data.Id}"><strong>Third-Party #{!thirdParty.ordinal}</strong></a></li>
                            </apex:repeat>
                            <li><a href="#finalizeSched"><strong>Finalize Schedule</strong></a></li>
                        </ul>
                    </apex:outputPanel>
                    
                    <apex:dynamicComponent componentValue="{!primaryAspect}"/>
                    <apex:outputPanel layout="block" id="thirdPartyAspects">
                        <apex:dynamicComponent componentValue="{!thirdPartyAspects}" />
                    </apex:outputPanel>
                    
                    <div id="finalizeSched">
                        <apex:outputPanel id="finalizeSched" layout="block">
                            <div class="scp-blocking"></div>
                            
                            <!-- the gridLayout shell and init script: -->
                            <apex:outputPanel layout="block" id="summaryGridShell" styleClass="scpAspect body" />
                            <script type="text/javascript">
                                (function($) {
                                    var cnode = $cnode('#root', 'scpSummary'),
                                        compApi = cnode.getComponentApi(),
                                        grid = $(document.getElementById("{!$Component.summaryGridShell}"))
                                            .gridLayout(rk.scp.summaryCols, rk.scp.gridConfig),
                                        gridApi = grid.gridLayoutApi();
                                    
                                    $cnode('#root', 'scpSummary', {
                                        elements: {
                                            node: cnode,
                                            api: compApi,
                                            gridApi: gridApi,
                                            dataLoader: "{!$Component.summaryDataLoader}",
                                            rules: "{!$Component.rules}",
                                            errorMsg: "{!$Component.errorMsg}",
                                            warningMsg: "{!$Component.warningMsg}",
                                            confirmMsg: "{!$Component.confirmMsg}"
                                        }
                                    });
                                    
                                    // setup logic for the aspect body:
                                    cnode.offOnSelf("dataLoad", 
                                        function(evt) {
                                            var gridApi = compApi.elements.gridApi;
                                            
                                            // TODO:
                                            /*
                                            rk.scp.formatAspectBody(gridApi);
                                            if (cnode.is(".primary")) {
                                                rk.scp.manageSchedInterval(gridApi, 
                                                    ["Payment_Interval__c", "First_Payment__c", "Final_Payment__c", "Number_of_Payments__c"]);
                                            }
                                            */
                                        });
                                    
                                })(jQuery);
                            </script>
                            
                            <!-- the gridLayout dataLoader script, this will trigger "beforeDataLoad" and "dataLoad" events for the body grid: -->
                            <apex:outputPanel id="summaryDataLoader" layout="block" >
                                <script type="text/javascript">
                                    (function($) {
                                        rk.scp.actionFailure = {!hasFailure};
                                        
                                        var cnode = $cnode('#root', 'scpSummary'),
                                            bodyGridApi = cnode.getComponentApi().elements.gridApi;
                                        
                                        var data = {!summaryBodyGridJSON};
                                        
                                        bodyGridApi.setHeight("auto");
                                        cnode.triggerBoth("beforeDataLoad")
                                        bodyGridApi.load(data);
                                        cnode.triggerBoth("dataLoad");
                                        bodyGridApi.fireResize();
                                    })(jQuery);
                                </script>
                            </apex:outputPanel>
                            <apex:outputPanel layout="block" id="rules">
                                <c:MessageBlock id="errorMsg" type="error" title="Error:" summary="You must resolve the following issues before proceeding" />
                                <c:MessageBlock id="warningMsg" type="warning" title="Warning:" summary="You should review the following before proceeding" />
                                <c:MessageBlock id="confirmMsg" type="confirm" title="Success:" summary="Your schedule looks OK; you may proceed with schedule generation" />
                                
                                <div style="text-align:center;{!IF(canGenerateSched, 'display:block', 'display:none')}">
                                    <button id="generateSched">Generate Schedule</button>
                                </div>
                                
                                <script type="text/javascript">
                                    (function($) {
                                        var rules = {!rulesJSON},
                                            rootElements = $cnode("#root").getComponentApi().elements,
                                            tabs = $(document.getElementById(rootElements.tabs)),
                                            elements = $cnode(".scpSummary").getComponentApi().elements;
                                        
                                        $("#generateSched").button({
                                            icons: { 
                                                primary: "ui-icon-clock"
                                            } 
                                        }).click(
                                            function() {
                                                $cnode("#root").getComponentApi().actions.generateSched();
                                                return false;
                                            });
                                        var $rules = $(document.getElementById(elements.rules));
                                        
                                        if (rules.errors) {
                                            var ul = $('<ul>').appendTo($rules.find(".error .detail"));
                                            rk.scp.appendRulesListItems(ul, rules.errors);
                                        } else {
                                            $(document.getElementById(elements.errorMsg)).hide();
                                        }
                                        
                                        if (rules.warnings) {
                                            var ul = $('<ul>').appendTo($rules.find(".warning .detail"));
                                            rk.scp.appendRulesListItems(ul, rules.warnings);
                                            
                                        } else {
                                            $(document.getElementById(elements.warningMsg)).hide();
                                        }
                                        
                                        if (rules.errors) {
                                            $(document.getElementById(elements.confirmMsg)).hide();
                                        }
                                        
                                    })(jQuery);
                                </script>
                            </apex:outputPanel>
                        </apex:outputPanel>
                    </div>
                    
                </div>
            </apex:outputPanel>
            
            <div style="display:none">
            
                <!-- TODO: ugh, we need a better standard error dialog component: -->
                <rkl:InlineDialogWrapper props="{!validationErrorsDialog}">
                    <!-- <rkl:DialogValidationErrors props="{!validationErrorsDialog}" />-->
                    
                    <!-- Dialog title: -->
                    <div id="{!validationErrorsDialog.titleUpdateNodeDomId}" style="display:none">
                        <div>Please Review Errors</div>
                    </div>
                    <!-- Dialog scripts: -->
                    <div id="{!validationErrorsDialog.scriptsDivDomId}">
                        <rkl:InlineDialogScripts props="{!validationErrorsDialog}" signalSubmitFailure="false" />
                    </div>  
                    <!-- Dialog contents: -->
                    <div class="{!validationErrorsDialog.styles.Header}">
                        <rkl:PageMessage escape="false" severity="error" strength="2" summary="{!validationErrorsDialog.dialogContentTokenDivHtml}" />
                    </div>
                    <apex:outputPanel layout="block" id="buttonsBar" styleClass="{!validationErrorsDialog.styles.CommandFooter}">
                        <button class="rkme-error-ok">Ok</button>
                    </apex:outputPanel>
                    
                    <script type="text/javascript">
                        (function ($) {
                            $(document.getElementById('{!$Component.buttonsBar}')).children('.rkme-error-ok')
                                .button()
                                .click(
                                    function() {
                                        {!validationErrorsDialog.closeDialogScript};
                                        return false;
                                    });
                        })(jQuery);
                    </script>
                </rkl:InlineDialogWrapper>
            </div>
            
        </apex:form>
    </apex:outputPanel>
    
</apex:page>