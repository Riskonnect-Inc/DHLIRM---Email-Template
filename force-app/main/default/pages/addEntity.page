<apex:page controller="rkl.JS_Search" extensions="AddEntity_Controller" action="{!pageLoad}" docType="html-5.0" sidebar="false" showHeader="false" standardStylesheets="false" cache="false">
    <head>
        <rkl:RKPIncludes includeModules="*" portalGroup="{!portalSettings.portalGroup}" />

    <script>
        console.log(document.cookie.split(';'));
        var loadingApi = namespace('rkl.portal.ui.loading');
        function getUrlParameter(sParam) {
            var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                sURLVariables = sPageURL.split('&'),
                sParameterName,
                i;

            for (i = 0; i < sURLVariables.length; i++) {
                sParameterName = sURLVariables[i].split('=');

                if (sParameterName[0] === sParam) {
                    return sParameterName[1] === undefined ? true : sParameterName[1];
                }
            }
        };
        var getCookie = function(cName){
            var name = cName + "=";
            var cookieParts = document.cookie.split(';');
            for(var i = 0; i < cookieParts.length; i++){
                var part = cookieParts[i].trim();
                if(part.indexOf(name) == 0){
                    return part.substring(name.length,part.length);
                }
            }
            return null;
        };
        var bindRenewalInfo = function(prog){
            /*
            apex__renewalInfo = {
                renewalControl:'',
                renewalHierarchy: '',
                userLookupField: '',
                renewalControlLookupField: '',

                parentEntity: '' (Optional field)
                parentEntityLookupField:'' (Optional field)
            }

            then, in the specific section, you need to set the user lookup field in whatever fieldset it resides in the 
            configuration object with the user Id. The user Id you can get from the security cookie in the controller
            You can use this:
            tconfig.program.sections(0).sobject().get(userLookupField.toLowerCase()).value('{!userId}');

            Additionally, if the parentEntity and parentEntityLookupField fields are poplulated, you will need to do the same thing
            in the section that the parentEntityLookupField is in **IF that field is on the Portal**.

            to set the value, you can use this:
            tconfig.program.sections(0).sobject().get(parentEntityLookupField.toLowerCase()).value(parentEntity);

            */
            var renewalCookie = getCookie("apex__renewalInfo");
            if(renewalCookie){
                renewalCookie = JSON.parse(renewalCookie);
            }
            if(renewalCookie){
                var wasUIFields = {};
                var possibleUIFields = [];
                if(renewalCookie.renewalControlLookupField){
                    possibleUIFields.push({
                        field: renewalCookie.renewalControlLookupField,
                        value: renewalCookie.renewalControl
                    });
                }
                for(var i=0;i<renewalCookie.userLookupField.length;i++){
                    possibleUIFields.push({
                        field: renewalCookie.userLookupField[i],
                        value: '{!userId}',
                    });
                }
                if(renewalCookie.parentEntityLookupField){
                    possibleUIFields.push({
                        field: renewalCookie.parentEntityLookupField,
                        value: renewalCookie.parentEntity.split(renewalCookie.renewalControl)[1]
                    });
                }
                var sections = prog.sections();
                for(var i=0; i<sections.length; i++){
                    for(var j=0; j<possibleUIFields.length; j++){
                        var testField = sections[i].fields(possibleUIFields[j].field.toLowerCase());
                        if(testField){
                            testField.rebind(possibleUIFields[j].value);
                            testField.ro(true);
                            wasUIFields[possibleUIFields[j].field] = true;
                        }
                    }
                }
                for(var i=0; i<possibleUIFields.length; i++){
                    if(!wasUIFields[possibleUIFields[i].field]){
                        sections[0].sobject().get(possibleUIFields[i].field.toLowerCase()).value(possibleUIFields[i].value);
                    }
                }
            }
        };
        function pollCallback(rcId, rhId, eId){
            return new Promise(function(resolve, reject){
                AddEntity_Controller.pollAddEntityProcess(rcId,rhId,eId, function(response,status){
                    if(response.statusCode === "Finished"){
                        var newCookie = JSON.parse(getCookie("apex__renewalInfo"));
                        newCookie["entityId"] = eId;
                        document.cookie = "apex__renewalInfo=" + JSON.stringify(newCookie) + ";path=/;domain=force.com;";
                        resolve();
                    } else{
                        setTimeout(function(){
                            pollCallback(rcId, rhId, eId)
                                .then(resolve)
                                .catch(reject);
                        }, 1000);
                    }                                            
                });
            })
        };
        var runAssignmentGenerator = function(entityId){
            var renewalCookie = getCookie("apex__renewalInfo");
            if(renewalCookie){
                renewalCookie = JSON.parse(renewalCookie);
            }
            return new Promise(function(resolve, reject){
                if(renewalCookie){
                    var eId = entityId;
                    var rhId = renewalCookie.renewalHierarchy;
                    var rcId = renewalCookie.renewalControl;
                    var $defForWait = new $.Deferred();
                    loadingApi.waitForLoad($defForWait, 'Generating Assignments');
                    AddEntity_Controller.kickOffAddEntity(rcId, rhId, eId, function(response,status){
                        if(response){
                            pollCallback(rcId, rhId, eId)
                                .then(resolve).catch(reject);
                        }
                    });
                } else{
                    reject();
                }
            })
        };
            (function($) {
                "use strict";

                $(document).on('programReady', function(event, program) {
                  $('.initLoadScreen').fadeOut();

                  if(program.$topBar) {
                      $('<a id="finishLater" class="btn pull-right">Return To Renewals</a>')
                          .appendTo(program.$topBar)
                          .click(function(){
                            document.cookie = 'apex__renewalInfo=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
                            window.location.href = '{!$Page.rkl__RenewalPortal}?portalGroup={!$CurrentPage.parameters.portalGroup}';
                          });

                      $('<img height="50" />')
                            .attr("src", namespace('portal.images').{!portalSettings.PortalLogo})
                            .addClass("image")
                      .appendTo(program.$topBar);
                  }

                }); // End programReady

                

                var template = {};
                var templateType = getUrlParameter('type');
                template[templateType] = {
                    /*validations: [function(program) {
                            var $def = new $.Deferred();
                            return $def.promise();
                        },
                    ],
                    prune_safety: [
                        {
                            sobjectType: (templateType==='hierarchy' ? 'rkl__rk_hierarchy_node__c' : (templateType==='property' ? 'property__c' : '')),
                            //records: [], // if there are any records that may be hidden that we want to save
                            fields: ['*'],  // if there are any fields that may be hidden that we want to save
                        },
                    ],
                    prune_verify: [function() {
                        var $def = new $.Deferred();
                        console.log('Pruned', arguments);
                        $def.resolve();
                        return $def.promise();
                    }],*/
                    submit : {
                        final_save_done: [function(program) {
                            var $def = new $.Deferred();

                            var $thisMessage = $("span[data-rktrans='dialog.Success.Message']")
                                .append(program.sections()[0].sobject().get('name').value());
                            var $thisTitle = $("span[data-rktrans='dialog.Success.Title']");
                            var $success = rkl.portal.ui.util.portalDialog({type: 'success', $message: $thisMessage, $title: $thisTitle});

                            $success
                                .done(function() {
                                    runAssignmentGenerator(program.sections()[0].sobject().get('id').value()).then(function(){
                                        $def.resolve();
                                        window.location = '/apex/rkl__RenewalPortal?portalGroup={!JSINHTMLENCODE($CurrentPage.parameters.portalGroup)}';
                                    });
                                });

                            return $def.promise();
                        }]
                    },
                };

                var config = {

                    controller: AddEntity_Controller,
                    masterTemplate: getUrlParameter('type'),
                    htmlSelector: "#incidentPortalRoot",
                    templates: template
                };
                // End Portal Configuration Object

                /*
                 *  Portal Initialization
                 */
                rkl.portal.ui.init(config)
                    .done(function(tconfig) {
                        tconfig.program.init();
                        $(document).trigger("programReady", tconfig.program);
                        //This is the magic renewal add entity function
                        bindRenewalInfo(tconfig.program);
                        //Added per Josh request 12/6/17
                        if(templateType==='property'){
                            var propIdField = tconfig.program.sections(0).sobject().get('property_id__c');
                            if(propIdField){
                                //AEyyyy-mm-ddThh:mm:ss
                                var dateVal = new Date();
                                propIdField.value('AE'+dateVal.toISOString().split('.')[0]);
                            }
                        }
                        var addField = tconfig.program.sections(0).sobject().get('added_via_renewal__c');
                        if(addField){
                            addField.value(true);
                        }


                        tconfig.program.__submitHooks.prune_safety.push({
                            sobjectType: (templateType==='hierarchy' ? 'rkl__rk_hierarchy_node__c' : (templateType==='property' ? 'property__c' : '')),
                            records: [], // if there are any records that may be hidden that we want to save
                            fields: ['*'],  // if there are any fields that may be hidden that we want to save
                        });
                        console.log(tconfig.program);
                    })
                    .fail(function() {
                        console.log(arguments);
                        alert("Something bad happened during initialization - See console");
                    });


            })(jQuery);
        </script>
    </head>
    <body>
        <div id="customMessages" style="display: none;">
            <span data-rktrans="dialog.Success.Title" data-rktranselemtype="ui.label">Success!</span>
            <span data-rktrans="dialog.Success.Message" data-rktranselemtype="ui.label">Generating applicable assignments for </span>
        </div>
        <div class="ui-widget-overlay ui-front initLoadScreen" style="display: true;">
            <div class="crMsg" style="text-align: center;font-weight: bold;">
                Loading... <br/>
                 <img src="{!$Resource.rkl__ajax_loader_gif}" height="50" width="50"/> <br/>
                Please Wait...
            </div>
        </div>
        <div id="incidentPortalRoot"></div>
    </body>
</apex:page>