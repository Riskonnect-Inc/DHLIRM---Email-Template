<!---- ****************************************************************
                        Added to RK base RMIS product as 05/29/2013
           ******************************************************************* -->
<apex:page controller="ClaimSearch" showHeader="{!uiManager.header}" sidebar="{!uiManager.sidebar}">
    <apex:stylesheet value="{!URLFOR($Resource.rkme__im_resources_zip, '/css/forms_css.css')}" />
    <apex:stylesheet value="{!$Resource.rkme__paginator_css}" />
    <apex:stylesheet value="{!$Resource.rkme__ui_manager_css}" />
    <apex:stylesheet value="{!$Resource.rkme__inline_dialog_css}" />
    <apex:stylesheet value="{!$Resource.rkme__blocking_pane_css}" />
    <apex:stylesheet value="{!$Resource.rkme__sortable_column_header_css}" />
    <apex:stylesheet value="{!$Resource.claim_search_css}" />
    <apex:stylesheet value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/themes/start/jquery-ui.css" />
    
    <apex:includeScript value="{!$Resource.rkme__jQuery}" />
    
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.js" />
    <apex:includeScript value="{!$Resource.rkme__jQuery_color_js}" />
    <apex:includeScript value="{!$Resource.rkme__dojo_build_js}" />
    <apex:includeScript value="{!$Resource.rkme__string_utils_js}" />
    <apex:includeScript value="{!$Resource.rkme__resource_locator_js}" />
    <apex:includeScript value="{!$Resource.rkme__visualforce_utils_js}" />
    <apex:includeScript value="{!$Resource.rkme__smart_layout_container_js}" />
    <apex:includeScript value="{!$Resource.rkme__inline_dialog_js}" />
    <apex:includeScript value="{!$Resource.rkme__paginator_js}" />
    <apex:includeScript value="{!$Resource.rkme__ui_manager_js}" />
    <apex:includeScript value="{!$Resource.claim_search_js}" />
    
    <head>
        <script type="text/javascript">
            var STATIC_RESOURCE_URL = "{!URLFOR($Resource.rkme__im_resources_zip)}";
            {!uiManagerScript}
            // in this case, we must attach to onload *after* the SFDC declared body - which specifies its own onload handler that will clobber any preexisting handler:
            _uiManager.attachToWindowOnload();
        </script>
    </head>
    
    <body>
        <apex:form >
            <apex:pageBlock id="criteria" >
                <div class="rkon-clmsrch-criteria-header">
                  <span style="font-weight:bold;font-size:110%">Search Criteria</span>&nbsp;
                  <a id="hideShowCriteria"></a>
                </div>
                <div class="rkon-clmsrch-criteria">
                    <apex:pageMessages />
                    <apex:dynamicComponent componentValue="{!filtersPanel}" />
                </div>
                <apex:pageBlockButtons location="bottom">
                    <apex:commandButton value="Search" onclick="_uiManager.onStartAction('Searching...');$('.dateRangeContainer').rkonDateRange('beforeSave')" action="{!search}" rerender="criteria,resultsContainer" oncomplete="_uiManager.onCompleteAction()" />
                </apex:pageBlockButtons>
            </apex:pageBlock>
            
            <apex:actionRegion >
                <apex:actionFunction name="af_sort" action="{!sort}" rerender="resultsContainer" oncomplete="_uiManager.onCompleteAction()">
                    <apex:param name="af_sort" value="" />
                </apex:actionFunction>
                <apex:actionFunction name="af_pageSize" action="{!setPageSize}" rerender="resultsContainer" oncomplete="_uiManager.onCompleteAction()">
                    <apex:param name="af_pageSize" value="" />
                </apex:actionFunction>
                <apex:actionFunction name="af_pageNumber" action="{!setPageNumber}" rerender="resultsContainer" oncomplete="_uiManager.onCompleteAction()">
                    <apex:param name="af_pageNumber" value="" />
                </apex:actionFunction>
            </apex:actionRegion>
        </apex:form>
        
        <apex:pageBlock id="resultsContainer"> <!-- IMPORTANT! This Vforce id is also referenced by the Apex code for generating the dynamicComponent, so it must be maintained there as well -->
            <apex:dynamicComponent componentValue="{!resultsGrid}" />
        </apex:pageBlock>
    </body>
    
</apex:page>