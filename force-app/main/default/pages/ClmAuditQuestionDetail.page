<!-- Mike Ulveling -->
<apex:page standardController="rkl__RKL_ClmAuditQuestionDetail__c" extensions="rkme.MassEdit" recordSetVar="ignore" sidebar="{!uiManager.sidebar}" showHeader="{!uiManager.header}">
    <head>
        <rkme:RkImports initScript="{!uiManagerScript}" allComponentsMin="true" />
        <apex:stylesheet value="{!$Resource.rkme__mass_edit_css}" />
        <apex:stylesheet value="{!$Resource.rkme__mass_edit_overrides_css}" />
        <apex:includeScript value="{!$Resource.rkme__mass_edit_js}" />
        
        <style type="text/css">
            td.dataCell.col-Question__c textArea {
                overflow-y: auto;
                overflow-x: hidden;
                border: solid #cccccc 1px;
                border-radius: 2px;
                width: 250px;
                height: 4em;
                background-color: #f3f3f3;
                box-sizing: border-box;
                font-size: 8pt !important;
                padding: 2px !important;
                min-height: 2em;
            }
            
            td.dataCell.col-Question__c textArea.verbose {
                width: 300px;
                min-height: 4em;
            }
            
            td.dataCell.col-Question__c {
                font-size: 1em !important;
                width: 1px;
                padding-right: 1em !important;
            }
            
            td.dataCell.col-Category__c {
                white-space: nowrap;
                width: 1px;
                padding-right: 1em !important;
            }
            
            td.dataCell.col-Question_Number__c {
                white-space: nowrap;
                width: 1px;
                text-align: right;
                padding-right: 1em !important;
            }
            
            td.dataCell.col-Answer__c {
                width: 1px;
                padding-right: 1em !important;
            }
            
            td.dataCell.col-Comment__c textArea {
                height: 4em;
                border: solid #cccccc 1px;
                border-radius: 2px;
                font-size: 8pt !important;
            }
            
            td.dataCell.col-Comment__c {
                font-size: 1em !important;
                padding-right: 1em !important;
            }
            
            div.testTextArea {
                box-sizing: border-box;
                font-size: 8pt !important;
                padding: 2px !important;
                width: 300px !important;
                border: solid #cccccc 1px;
            }
        </style>
        
        <script type="text/javascript">
            var $testArea;
            
            function calcTextAreaHeight(text) {
                if (!$testArea) {
                    $testArea = $('<div class="testTextArea"/>')
                        .css("visibility", "hidden")
                        .css("display", "inline-block")
                        .text(text)
                        .appendTo(document.body);
                } else {
                    $testArea.text(text).css("display", "inline-block");
                }
                
                height = $testArea.outerHeight();
                $testArea.css("display", "none");
                return height;
            }
        </script>
    </head>
    
    <body> 
    <apex:form >
        <apex:actionRegion >
            
            <apex:actionFunction name="af_save" action="{!save}" rerender="{!saveActionVars.rerender}" oncomplete="{!saveActionVars.oncomplete}">
                <apex:param name="{!param_moddedRowKeys}" value="" />
            </apex:actionFunction>
            <!-- the following grid actions will also save changes: -->
            <apex:actionFunction name="{!af_saveSort}" action="{!saveSort}" rerender="{!gridActionVars.rerender}" oncomplete="{!gridActionVars.oncomplete}">
                <apex:param name="{!param_moddedRowKeys}" value="" />
                <apex:param name="{!param_sort}" value="" />
            </apex:actionFunction>
            <apex:actionFunction name="{!af_saveSetPage}" action="{!saveSetPage}" rerender="{!gridActionVars.rerender}" oncomplete="{!gridActionVars.oncomplete}">
                <apex:param name="{!param_moddedRowKeys}" value="" />
                <apex:param name="{!param_pageNumber}" value="" />
            </apex:actionFunction>
            <apex:actionFunction name="{!af_saveSetPageSize}" action="{!saveSetPageSize}" rerender="{!gridActionVars.rerender}" oncomplete="{!gridActionVars.oncomplete}">
                <apex:param name="{!param_moddedRowKeys}" value="" />
                <apex:param name="{!param_pageSize}" value="" />
            </apex:actionFunction>
            
            <div class="{!styles.FormTopOuter}" id="{!styles.FormTopOuterDomId}" >
                <apex:outputPanel layout="block" styleClass="{!styles.FormTopInner}" id="rkon-me-shellContainer"> <!-- this id is important for mass-edit scripts! -->
                    <apex:outputPanel layout="{!styles.contentWrapperLayout}">
                        
                        <div class="{!styles.FormContent}">
                        
                            <div class="{!styles.FormHeader} noTopDec" style="padding-bottom:0">
                                <apex:outputPanel id="rkon-me-messagesContainer" layout="block">
                                    <div id="rkon-me-messagesContainer">
                                        <!-- <apex:pageMessages rendered="{!NOT(trappedErrors)}" /> -->
                                        <rkme:PageMessage severity="info" strength="3" escape="false" summary="{!instrucsHtml}" />
                                    </div>
                                </apex:outputPanel>
                            </div>
                
                            <div class="{!styles.FormDiv} first noBottomDec" style="padding-top:5px">
                            
                                <div id='rkon-me-tabOrder'>&nbsp;</div>
                                
                                <!-- the following grid actions will discard changes: -->
                                <apex:actionRegion >
                                    <apex:actionFunction name="{!af_sort}" action="{!sort}" rerender="{!gridActionVars.rerender}" oncomplete="{!gridActionVars.oncomplete}">
                                        <apex:param name="{!param_sort}" value="" />
                                    </apex:actionFunction>
                                    <apex:actionFunction name="{!af_setPage}" action="{!setPage}" rerender="{!gridActionVars.rerender}" oncomplete="{!gridActionVars.oncomplete}">
                                        <apex:param name="{!param_pageNumber}" value="" />
                                    </apex:actionFunction>
                                    <apex:actionFunction name="{!af_setPageSize}" action="{!setPageSize}" rerender="{!gridActionVars.rerender}" oncomplete="{!gridActionVars.oncomplete}">
                                        <apex:param name="{!param_pageSize}" value="" />
                                    </apex:actionFunction>
                                </apex:actionRegion>
                                
                                <!-- The grid, as a Dynamic Visualforce Component: -->
                                <apex:outputPanel layout="block" id="rkon-me-gridContainer">
                                    <apex:dynamicComponent componentValue="{!gridComponent}" />
                                    
                                    <script type="text/javascript">
                                        (function($) {
                                            $("td.dataCell.col-Question__c").each(function() {
                                                if ($(this).is(".readonly")) {
                                                    var text,
                                                        $area = $('<textArea class="questionWrapper"/>')
                                                            .text(text = $(this).children().detach().first("span").text())
                                                            .prop("readOnly", true)
                                                            .appendTo(this);
                                                    if (text.length > 140) {
                                                        $area.addClass("verbose");
                                                    }
                                                    $area.css("height", calcTextAreaHeight(text));
                                                }
                                            });
                                        })(jQuery);
                                    </script>
                                </apex:outputPanel>
                                
                            </div>
                            
                            <apex:outputPanel layout="block" id="buttonsBar" styleClass="{!styles.FormFooter} buttonsBar" style="font-size:0.9em">
                                <button class="rkme-commit">Save</button>
                                <button class="rkme-batchUpdateDialog" style="{!IF(hasMassUpdateableField, '', 'display:none')}">Mass Update</button>
                                <button class="rkme-cancelPage">Cancel</button>
                                <apex:actionRegion >
                                    <apex:actionFunction name="af_cancelPage" action="{!cancel}" immediate="true" />
                                </apex:actionRegion>
                            </apex:outputPanel>
                            <script type="text/javascript">
                                (function ($) {
                                    var $bb;
                                    ($bb = $(document.getElementById('{!$Component.buttonsBar}'))).find('button.rkme-commit')
                                        .button()
                                        .click(function() {
                                            rkon_me.save('{!JSENCODE(validationErrorsDialog.dialogKey)}');
                                            return false;
                                        });
                                    $bb.find('button.rkme-batchUpdateDialog')
                                        .button()
                                        .click(function() {
                                            _uiManager.openDialog('{!JSENCODE(massUpdateDialog.dialogKey)}');
                                            return false;
                                        });
                                    $bb.find('button.rkme-cancelPage')
                                        .button()
                                        .click(function() {
                                            af_cancelPage();
                                            return false;
                                        });
                                })(jQuery);
                            </script>
                            
                        </div>
                
                    </apex:outputPanel>
                </apex:outputPanel>
            </div>
                
        </apex:actionRegion>
        
        <div style="display:none">
            <!-- Note that the demarcation-begin/demarcation-end elements need to wrap the inner contents of EACH dialog, because these contents will be moved
                 to a different parent node by the layout manager upon the opening/closing of each dialog: -->
                 
            <!-- Validation Errors dialog: -->
            <rkme:InlineDialogWrapper props="{!validationErrorsDialog}">
                <div class="me-dialog-demarcation-begin" />
                <rkme:DialogValidationErrors props="{!validationErrorsDialog}" />
                <div class="me-dialog-demarcation-end" />
            </rkme:InlineDialogWrapper>
            <!-- Mass Update dialog: -->
            <rkme:InlineDialogWrapper props="{!massUpdateDialog}">
                <div class="me-dialog-demarcation-begin" />
                <rkme:DialogBatchUpdate massEdit="{!self}" props="{!massUpdateDialog}" />
                <div class="me-dialog-demarcation-end" />
            </rkme:InlineDialogWrapper>
            
            <!-- save-or-discard[action] dialog: -->
            <rkme:InlineDialogWrapper props="{!saveDiscardDialog}">
                <div class="me-dialog-demarcation-begin" />
                <rkme:DialogMassEditSaveDiscard cntrl="{!saveDiscardController}" props="{!saveDiscardDialog}" />
                <div class="me-dialog-demarcation-end" />
            </rkme:InlineDialogWrapper>
        </div>
    </apex:form>
    </body>
</apex:page>